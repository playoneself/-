/*
题目描述：
小明有n块木板，第i（1＜=i＜=n）块木板的长度为a[i]。
小明买了一块长度为m的木料，这块木料可以切割成任意块，拼接到已有的木板上，用来加长木板。
小明想让最短的木板尽量长。
请问小明加长木板后，最短木板的长度最大可以为多少？
输入描述：
输入的第一行包含两个正整数，n，m —— n表示木板数，m表示木料长度。
输入的第二行包含n个正整数，a1，a2，，，，，an (1＜=a[i]＜=106)。
输出描述：
输出的唯一一行包含一个正整数，表示加长木板后，最短木板的长度最大可以为多少？

示例1
输入：
5 3
4 5 3 5 5
输出：
5
说明：
给第1块木板长度增加1，给第3块木板长度增加2后，这5块木板长度变为[5,5,5,5,5]，最短的木板的长度最大为5。
示例2
输入：
5 2
4 5 3 5 5
输出：
4
说明：
给第3块木板长度增加1后，这5块木板长度变为[4,5,4,5,5]，剩余木料的长度为1。
此时剩余木料无论给哪块木板加长，最短木料的长度都为4。
请用js代码实，并附带注释

*/
//解法一 买的木板长度就是增加的次数 便利数组，给最小的加一，最后在取最小的输出
let token1 = '5 50' //await readline()
let token2 = '4 5 3 5 5 5 5 5 5 5 5' //await readline()
let n = token1.split(' ')[1]
let longArr =  token2.split(' ')
let lastArr = []
let m = longArr.length
//console.log(n)
//console.log(longArr)
for(let i=0;i<n;i++){
    lastArr = longArr.sort((a,b)=>a-b) 
    lastArr[0]++
    longArr = lastArr
} 
    console.log(lastArr.sort((a,b)=>a-b)[0])